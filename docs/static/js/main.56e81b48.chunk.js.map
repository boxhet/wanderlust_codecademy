{"version":3,"sources":["components/Header.js","components/Form.js","components/Weather.js","components/Place.js","components/Venues.js","components/Destination.js","components/Footer.js","App.js","index.js"],"names":["Header","className","src","alt","Form","setCity","autoComplete","onSubmit","e","preventDefault","city","target","value","currentTarget","reset","type","id","name","day","Date","toLocaleString","weekday","Weather","path","process","useState","weather","setWeather","temperature","setTemperature","error","setError","a","fetch","then","res","json","main","message","Error","description","icon","temp","useEffect","weatherHandler","Place","venue","categories","prefix","suffix","location","address","country","clientId","REACT_APP_FOURSQUARE_CLIENT_ID","clientSecret","REACT_APP_FOURSQUARE_CLIENT_SECRET","url","date","toISOString","replaceAll","slice","Venues","places","setPlaces","venueUrl","meta","response","groups","errorDetail","venues","items","map","item","venueHandler","Destination","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56e81b48.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <img\n        className=\"logo\"\n        src=\"https://content.codecademy.com/courses/intermediate-javascript-requests/wanderlust/logo.svg\"\n        alt=\"logo\"\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Form({ setCity }) {\n  function handleSubmit(e) {\n    e.preventDefault();\n    const city = e.target.city.value;\n    setCity(city);\n    e.currentTarget.reset();\n  }\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <input type=\"text\" id=\"city\" name=\"city\" />\n      <button id=\"button\">Submit</button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\n\nconst { REACT_APP_OPENWEATHER_APP_ID: appId } = process.env;\nconst weatherUrl = \"https://api.openweathermap.org/data/2.5/weather\";\nconst day = new Date().toLocaleString(\"en-US\", {\n  weekday: \"long\",\n});\n\nfunction Weather({ city }) {\n  const path = `${weatherUrl}?q=${city}&appid=${appId}&units=metric`;\n\n  const [weather, setWeather] = useState({});\n  const [temperature, setTemperature] = useState([]);\n  const [error, setError] = useState(null);\n\n  async function weatherHandler() {\n    try {\n      const { main, weather, message } = await fetch(path).then((res) =>\n        res.json()\n      );\n      if (!main || !weather) {\n        throw new Error(message);\n      }\n      const { description, icon } = weather[0];\n      setWeather({ description, icon });\n      setTemperature(main.temp);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  }\n\n  useEffect(() => {\n    if (city && city !== \"\") {\n      weatherHandler();\n    }\n  }, [city]);\n\n  return weather && temperature && !error ? (\n    <>\n      <div className=\"sectiontitle\">\n        <h2>CURRENT WEATHER</h2>\n      </div>\n      <section id=\"weather\">\n        <div className=\"weather\" id=\"weather1\">\n          <h2>{day}</h2>\n          <h2>Temperature: {temperature}Â°C</h2>\n          <h2>Condition: {weather.description}</h2>\n          <img\n            className=\"weathericon\"\n            src={`https://openweathermap.org/img/wn/${weather.icon}@2x.png`}\n            alt={weather.description}\n          />\n        </div>\n      </section>\n    </>\n  ) : (\n    <p className=\"weather\">{error}</p>\n  );\n}\n\nexport default Weather;\n","import React from \"react\";\n\nfunction Place({ venue }) {\n  const { icon, name } = venue.categories[0];\n  return (\n    <div className=\"venue\">\n      <h2>{venue.name}</h2>\n      <img\n        className=\"venueimage\"\n        src={`${icon.prefix}bg_64${icon.suffix}`}\n        alt={name}\n      />\n      <h3>Address:</h3>\n      <p>{venue.location.address}</p>\n      <p>{venue.location.city}</p>\n      <p>{venue.location.country}</p>\n    </div>\n  );\n}\n\nexport default Place;\n","import React, { useState, useEffect } from \"react\";\nimport Place from \"./Place\";\n\nconst {\n  REACT_APP_FOURSQUARE_CLIENT_ID: clientId,\n  REACT_APP_FOURSQUARE_CLIENT_SECRET: clientSecret,\n} = process.env;\nconst url = `https://api.foursquare.com/v2/venues/explore`;\nconst date = new Date().toISOString().replaceAll(\"-\", \"\").slice(0, 8);\n\nfunction Venues({ city }) {\n  const [places, setPlaces] = useState([]);\n  const [error, setError] = useState(null);\n\n  async function venueHandler(city) {\n    const venueUrl = `${url}?near=${city}&client_id=${clientId}&client_secret=${clientSecret}&v=${date}&limit=3&locale=en`;\n    try {\n      const { meta, response } = await fetch(venueUrl).then((res) =>\n        res.json()\n      );\n      if (!response.groups) {\n        throw new Error(meta.errorDetail);\n      }\n      const venues = response.groups[0].items.map((item) => item.venue);\n      setPlaces(venues);\n      setError(null);\n    } catch (err) {\n      setError(err.message);\n    }\n  }\n\n  useEffect(() => {\n    if (city && city !== \"\") {\n      venueHandler(city);\n    }\n  }, [city]);\n\n  return places && !error ? (\n    <>\n      <div className=\"sectiontitle\">\n        <h2>TOP ATTRACTIONS</h2>\n      </div>\n      <section id=\"venues\">\n        {places.map((venue) => (\n          <Place venue={venue} key={venue.id} />\n        ))}\n      </section>\n    </>\n  ) : (\n    <p className=\"weather\">{error}</p>\n  );\n}\n\nexport default Venues;\n","import React from \"react\";\nimport Weather from \"./Weather\";\nimport Venues from \"./Venues\";\n\nfunction Destination({ city }) {\n  return (\n    city && (\n      <div className=\"container\">\n        <div id=\"destination\">{city}</div>\n        <Weather city={city} />\n        <Venues city={city} />\n      </div>\n    )\n  );\n}\n\nexport default Destination;","import React from \"react\";\n\nfunction Footer() {\n  return <footer></footer>;\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport Destination from \"./components/Destination\";\nimport Footer from \"./components/Footer\";\n\nimport \"./reset.css\";\nimport \"./style.css\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n\n  return (\n    <>\n      <Header />\n      <main>\n        <h1>Where do you want to land?</h1>\n        <Form setCity={setCity} />\n      </main>\n      <Destination city={city} />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}